#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏ —Å—Ç–∏–ª–µ–π –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
 * –ó–∞–º–µ–Ω—è–µ—Ç —Å—Ç–∞—Ä—ã–µ Tailwind –∫–ª–∞—Å—Å—ã –Ω–∞ –Ω–æ–≤—ã–µ admin-* –∫–ª–∞—Å—Å—ã
 */

const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

// –ö–∞—Ä—Ç–∞ –∑–∞–º–µ–Ω —Å—Ç–∞—Ä—ã—Ö –∫–ª–∞—Å—Å–æ–≤ –Ω–∞ –Ω–æ–≤—ã–µ
const styleReplacements = {
  // –ö–Ω–æ–ø–∫–∏
  'bg-blue-600 text-white': 'admin-btn admin-btn-primary',
  'bg-blue-700': 'admin-btn-primary:hover',
  'hover:bg-blue-700': '',
  'bg-white text-gray-700 border border-gray-200': 'admin-btn admin-btn-secondary',
  'hover:bg-gray-50': '',
  'bg-red-600 text-white': 'admin-btn admin-btn-danger',
  'hover:bg-red-700': '',
  
  // –ö–∞—Ä—Ç–æ—á–∫–∏
  'bg-white rounded-lg shadow-xl': 'admin-card',
  'bg-white rounded-lg shadow-lg': 'admin-card',
  'bg-white rounded-lg shadow': 'admin-card',
  
  // –§–æ—Ä–º—ã
  'block w-full px-3 py-2 border border-gray-300 rounded-md': 'admin-input',
  'block text-sm font-medium text-gray-700': 'admin-label',
  'w-full px-3 py-2 border border-gray-300 rounded-md': 'admin-select',
  
  // –¢–∞–±–ª–∏—Ü—ã
  'min-w-full divide-y divide-gray-200': 'admin-table',
  'px-6 py-3 bg-gray-50 text-left text-xs font-medium text-gray-500 uppercase tracking-wider': 'admin-table th',
  'px-6 py-4 whitespace-nowrap text-sm text-gray-900': 'admin-table td',
  
  // –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
  'fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full': 'admin-modal-overlay',
  'relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white': 'admin-modal',
  
  // –ù–∞–≤–∏–≥–∞—Ü–∏—è
  'flex items-center px-4 py-2 text-sm font-medium rounded-md': 'admin-nav-item',
  'bg-blue-100 text-blue-700': 'admin-nav-item active',
  'text-gray-700 hover:bg-gray-100': 'admin-nav-item',
  
  // –ë–µ–π–¥–∂–∏
  'inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800': 'admin-badge admin-badge-success',
  'inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800': 'admin-badge admin-badge-error',
  'inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800': 'admin-badge admin-badge-warning',
  'inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800': 'admin-badge admin-badge-neutral',
  
  // –û—Ç—Å—Ç—É–ø—ã
  'mt-4': 'admin-mt-4',
  'mb-4': 'admin-mb-4',
  'ml-4': 'admin-ml-4',
  'mr-4': 'admin-mr-4',
  'p-4': 'admin-p-4',
  'p-6': 'admin-p-6',
  
  // –¢–µ–∫—Å—Ç
  'text-xl font-semibold': 'admin-text-xl admin-font-semibold',
  'text-sm text-gray-500': 'admin-text-sm admin-text-gray-500',
  'text-gray-900': 'admin-text-gray-900',
  'font-medium': 'admin-font-medium',
  'font-semibold': 'admin-font-semibold',
  'font-bold': 'admin-font-bold',
  
  // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
  'max-w-7xl mx-auto px-4 sm:px-6 lg:px-8': 'admin-container',
  'w-full px-4': 'admin-container-fluid'
};

// –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∑–∞–º–µ–Ω—ã –¥–ª—è React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
const componentReplacements = {
  'className="bg-blue-600 text-white shadow-lg"': 'className="admin-nav"',
  'className="flex items-center justify-between h-16"': 'className="admin-nav"',
  'className="font-semibold text-xl"': 'className="admin-text-xl admin-font-semibold"',
  'className="flex space-x-2"': 'className="flex gap-2"'
};

function migrateFile(filePath) {
  console.log(`üîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ñ–∞–π–ª: ${filePath}`);
  
  let content = fs.readFileSync(filePath, 'utf8');
  let hasChanges = false;
  
  // –ü—Ä–∏–º–µ–Ω—è–µ–º –∑–∞–º–µ–Ω—ã —Å—Ç–∏–ª–µ–π
  Object.entries(styleReplacements).forEach(([oldClass, newClass]) => {
    const regex = new RegExp(oldClass.replace(/[.*+?^${}()|[\]\\]/g, '\\$&'), 'g');
    if (content.includes(oldClass)) {
      content = content.replace(regex, newClass);
      hasChanges = true;
      console.log(`   ‚úÖ –ó–∞–º–µ–Ω–∏–ª: "${oldClass}" ‚Üí "${newClass}"`);
    }
  });
  
  // –ü—Ä–∏–º–µ–Ω—è–µ–º –∑–∞–º–µ–Ω—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
  Object.entries(componentReplacements).forEach(([oldPattern, newPattern]) => {
    if (content.includes(oldPattern)) {
      content = content.replace(new RegExp(oldPattern, 'g'), newPattern);
      hasChanges = true;
      console.log(`   ‚úÖ –ó–∞–º–µ–Ω–∏–ª –∫–æ–º–ø–æ–Ω–µ–Ω—Ç: "${oldPattern}" ‚Üí "${newPattern}"`);
    }
  });
  
  // –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è –∫–ª–∞—Å—Å—ã
  content = content.replace(/className="([^"]*?)"/g, (match, classes) => {
    const classArray = classes.split(' ').filter(Boolean);
    const uniqueClasses = [...new Set(classArray)];
    return `className="${uniqueClasses.join(' ')}"`;
  });
  
  if (hasChanges) {
    fs.writeFileSync(filePath, content);
    console.log(`   üíæ –§–∞–π–ª –æ–±–Ω–æ–≤–ª–µ–Ω`);
  } else {
    console.log(`   ‚è≠Ô∏è  –ò–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è`);
  }
  
  return hasChanges;
}

function processDirectory(dir, extensions = ['.tsx', '.ts', '.jsx', '.js']) {
  console.log(`üìÅ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é: ${dir}`);
  
  const files = fs.readdirSync(dir);
  let totalChanges = 0;
  
  files.forEach(file => {
    const filePath = path.join(dir, file);
    const stat = fs.statSync(filePath);
    
    if (stat.isDirectory()) {
      // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º node_modules –∏ –¥—Ä—É–≥–∏–µ —Å–ª—É–∂–µ–±–Ω—ã–µ –ø–∞–ø–∫–∏
      if (!['node_modules', '.git', 'dist', 'build'].includes(file)) {
        totalChanges += processDirectory(filePath, extensions);
      }
    } else if (extensions.some(ext => file.endsWith(ext))) {
      if (migrateFile(filePath)) {
        totalChanges++;
      }
    }
  });
  
  return totalChanges;
}

function createBackup() {
  const timestamp = new Date().toISOString().replace(/[:.]/g, '-');
  const backupDir = `backup-${timestamp}`;
  
  console.log(`üíæ –°–æ–∑–¥–∞—é —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –≤ ${backupDir}`);
  
  try {
    execSync(`cp -r frontend ${backupDir}`, { stdio: 'inherit' });
    console.log(`‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞`);
    return backupDir;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏: ${error.message}`);
    return null;
  }
}

function validateMigration() {
  console.log(`üîç –ü—Ä–æ–≤–µ—Ä—è—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç –º–∏–≥—Ä–∞—Ü–∏–∏...`);
  
  const problematicPatterns = [
    'bg-blue-600',
    'bg-blue-700',
    'hover:bg-blue-700',
    'text-white shadow-lg',
    'flex items-center justify-between h-16'
  ];
  
  let issues = [];
  
  function checkFile(filePath) {
    const content = fs.readFileSync(filePath, 'utf8');
    problematicPatterns.forEach(pattern => {
      if (content.includes(pattern)) {
        issues.push({ file: filePath, pattern });
      }
    });
  }
  
  function checkDirectory(dir) {
    const files = fs.readdirSync(dir);
    files.forEach(file => {
      const filePath = path.join(dir, file);
      const stat = fs.statSync(filePath);
      
      if (stat.isDirectory() && !['node_modules', '.git'].includes(file)) {
        checkDirectory(filePath);
      } else if (file.endsWith('.tsx') || file.endsWith('.ts')) {
        checkFile(filePath);
      }
    });
  }
  
  checkDirectory('frontend/src');
  
  if (issues.length > 0) {
    console.log(`‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã:`);
    issues.forEach(({ file, pattern }) => {
      console.log(`   - ${file}: "${pattern}"`);
    });
  } else {
    console.log(`‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!`);
  }
  
  return issues.length === 0;
}

function main() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞—é –º–∏–≥—Ä–∞—Ü–∏—é —Å—Ç–∏–ª–µ–π –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏...\n');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
  if (!fs.existsSync('frontend/src')) {
    console.error('‚ùå –û—à–∏–±–∫–∞: –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞');
    process.exit(1);
  }
  
  // –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
  const backupDir = createBackup();
  if (!backupDir) {
    console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é. –ú–∏–≥—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.');
    process.exit(1);
  }
  
  console.log('\nüìù –ù–∞—á–∏–Ω–∞—é –º–∏–≥—Ä–∞—Ü–∏—é —Ñ–∞–π–ª–æ–≤...\n');
  
  // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
  const adminPanelChanges = processDirectory('frontend/src/pages/Admin');
  const workedAdminChanges = fs.existsSync('workedadminpanel') 
    ? processDirectory('workedadminpanel') 
    : 0;
  
  const totalChanges = adminPanelChanges + workedAdminChanges;
  
  console.log(`\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏:`);
  console.log(`   - –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: ${totalChanges}`);
  console.log(`   - –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å: ${adminPanelChanges} —Ñ–∞–π–ª–æ–≤`);
  console.log(`   - Workedadminpanel: ${workedAdminChanges} —Ñ–∞–π–ª–æ–≤`);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
  console.log('\nüîç –ü—Ä–æ–≤–µ—Ä—è—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç –º–∏–≥—Ä–∞—Ü–∏–∏...\n');
  const isValid = validateMigration();
  
  if (isValid) {
    console.log('\nüéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
    console.log(`üíæ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤: ${backupDir}`);
    console.log('\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
    console.log('   1. –î–æ–±–∞–≤—å—Ç–µ import –¥–ª—è admin-design-tokens.css –≤ index.css');
    console.log('   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ –≤ –±—Ä–∞—É–∑–µ—Ä–µ');
    console.log('   3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç—ã');
    console.log('   4. –ï—Å–ª–∏ –≤—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, —É–¥–∞–ª–∏—Ç–µ —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é');
  } else {
    console.log('\n‚ö†Ô∏è  –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏');
    console.log('   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É–∫–∞–∑–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –∏ –∏—Å–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–æ–±–ª–µ–º—ã –≤—Ä—É—á–Ω—É—é');
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
if (require.main === module) {
  main();
}

module.exports = { migrateFile, processDirectory, styleReplacements }; 