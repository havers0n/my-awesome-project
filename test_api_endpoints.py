#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö API endpoints
"""

import requests
import json

def test_api_endpoints():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API endpoints"""
    
    backend_url = "http://localhost:3000"
    
    endpoints_to_test = [
        "/api/inventory/products",
        "/api/forecast/metrics",
        "/api/forecast/history",
        "/api/forecast/predict"
    ]
    
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoints...")
    print("=" * 50)
    
    for endpoint in endpoints_to_test:
        print(f"\nüìç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: {endpoint}")
        
        try:
            if endpoint.endswith('/predict'):
                # POST endpoint –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è
                test_data = {
                    "DaysCount": 30,
                    "events": [
                        {
                            "Type": "–ü—Ä–æ–¥–∞–∂–∞",
                            "–ü–µ—Ä–∏–æ–¥": "2025-07-15T00:00:00",
                            "–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞": "–¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä",
                            "–ö–æ–¥": "TEST001"
                        }
                    ]
                }
                
                response = requests.post(
                    f"{backend_url}{endpoint}",
                    json=test_data,
                    headers={"Content-Type": "application/json"},
                    timeout=5
                )
            else:
                # GET endpoint
                response = requests.get(
                    f"{backend_url}{endpoint}",
                    timeout=5
                )
            
            print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
            
            if response.status_code == 200:
                print("   ‚úÖ Endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç")
            elif response.status_code == 401:
                print("   üîí –¢—Ä–µ–±—É–µ—Ç—Å—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è (–Ω–æ—Ä–º–∞–ª—å–Ω–æ)")
            elif response.status_code == 404:
                print("   ‚ùå Endpoint –Ω–µ –Ω–∞–π–¥–µ–Ω")
            else:
                print(f"   ‚ö†Ô∏è  –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.status_code}")
                
            if response.status_code != 200:
                try:
                    error_data = response.json()
                    print(f"   –û—à–∏–±–∫–∞: {error_data.get('error', 'Unknown error')}")
                except:
                    print(f"   –û—à–∏–±–∫–∞: {response.text[:100]}...")
                    
        except requests.exceptions.ConnectionError:
            print("   ‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É")
        except requests.exceptions.Timeout:
            print("   ‚è±Ô∏è  –¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\n" + "=" * 50)
    print("üéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ backend –∑–∞–ø—É—â–µ–Ω: cd backend && npm run dev")
    print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ ML –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É 8000")
    print("3. –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ frontend")
    print("4. –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:5174/sales-forecast-new")

if __name__ == "__main__":
    test_api_endpoints() 