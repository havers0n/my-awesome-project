param([string]$payloadPath = ".\ml_payload.json")

$json = Get-Content $payloadPath -Raw | ConvertFrom-Json
if ($json.Count -lt 2) {
    Write-Host "‚ùå –í payload –ø–æ—Å–ª–µ DaysCount –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏—è!" -ForegroundColor Red
    exit 1
}

$operations = $json | Select-Object -Skip 1

Write-Host "–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–∑–≤–∞–Ω–∏–π –ø–æ–ª–µ–π..."
$requiredFields = @("–ü–µ—Ä–∏–æ–¥", "–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞", "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ", "–ö–æ–¥", "–í–∏–¥–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä—ã", "Type", "–ê–¥—Ä–µ—Å_—Ç–æ—á–∫–∏")
$fieldOk = $true
foreach ($op in $operations) {
    foreach ($field in $requiredFields) {
        if (-not $op.PSObject.Properties.Name.Contains($field)) {
            Write-Host "‚ùå –ù–µ—Ç –ø–æ–ª—è '$field' –≤ –æ–ø–µ—Ä–∞—Ü–∏–∏: $($op | ConvertTo-Json -Compress)" -ForegroundColor Red
            $fieldOk = $false
        }
    }
}
if ($fieldOk) { Write-Host "‚úÖ –í—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç." -ForegroundColor Green }

Write-Host "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –¥–∞—Ç..."
$datePattern = '^[0-9]{4}-[0-9]{2}-[0-9]{2}$'
$dateOk = $true
foreach ($op in $operations) {
    if (-not ($op.–ü–µ—Ä–∏–æ–¥ -match $datePattern)) {
        Write-Host "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –¥–∞—Ç–∞: $($op.–ü–µ—Ä–∏–æ–¥) –≤ –æ–ø–µ—Ä–∞—Ü–∏–∏: $($op | ConvertTo-Json -Compress)" -ForegroundColor Red
        $dateOk = $false
    }
}
if ($dateOk) { Write-Host "‚úÖ –í—Å–µ –¥–∞—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD." -ForegroundColor Green }

Write-Host "–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–≥–ª–µ–Ω–∏—è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ —Ü–µ–ª–æ–≥–æ —á–∏—Å–ª–∞..."
$qtyOk = $true
foreach ($op in $operations) {
    if (-not ([int]$op.–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ -eq $op.–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ)) {
        Write-Host "‚ùå –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ: $($op.–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ) –≤ –æ–ø–µ—Ä–∞—Ü–∏–∏: $($op | ConvertTo-Json -Compress)" -ForegroundColor Red
        $qtyOk = $false
    }
}
if ($qtyOk) { Write-Host "‚úÖ –í—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞." -ForegroundColor Green }

Write-Host "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—è –¶–µ–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–π –ü–æ—Å—Ç–∞–≤–∫–∞..."
$priceOk = $true
foreach ($op in $operations) {
    $hasPrice = $op.PSObject.Properties.Name -contains "–¶–µ–Ω–∞"
    if ($op.Type -eq "–ü–æ—Å—Ç–∞–≤–∫–∞") {
        if (-not $hasPrice) {
            Write-Host "‚ùå –ù–µ—Ç –ø–æ–ª—è '–¶–µ–Ω–∞' –¥–ª—è –ø–æ—Å—Ç–∞–≤–∫–∏: $($op | ConvertTo-Json -Compress)" -ForegroundColor Red
            $priceOk = $false
        }
    } else {
        if ($hasPrice) {
            Write-Host "‚ùå –õ–∏—à–Ω–µ–µ –ø–æ–ª–µ '–¶–µ–Ω–∞' –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–∏ $($op.Type): $($op | ConvertTo-Json -Compress)" -ForegroundColor Red
            $priceOk = $false
        }
    }
}
if ($priceOk) { Write-Host "‚úÖ –ü–æ–ª–µ –¶–µ–Ω–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ç–æ–ª—å–∫–æ —É –ü–æ—Å—Ç–∞–≤–æ–∫." -ForegroundColor Green }

Write-Host "\n==== –ò—Ç–æ–≥ ===="
if ($fieldOk -and $dateOk -and $qtyOk -and $priceOk) {
    Write-Host "\nüéâ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´!" -ForegroundColor Green
    exit 0
} else {
    Write-Host "\n‚ö†Ô∏è  –ï—Å—Ç—å –æ—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ payload!" -ForegroundColor Yellow
    exit 2
}

