require('dotenv').config();
const { supabaseAdmin } = require('./dist/supabaseAdminClient.js');

async function auditDatabaseView() {
  try {
    console.log('üîç –ê–£–î–ò–¢ –ë–ê–ó–´ –î–ê–ù–ù–´–•: current_stock_view');
    console.log('='.repeat(60));
    
    const organizationId = 1;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º current_stock_view
    console.log('1Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê current_stock_view:');
    
    const { data: viewData, error: viewError } = await supabaseAdmin
      .from('current_stock_view')
      .select('*')
      .eq('organization_id', organizationId)
      .order('product_name')
      .limit(10);

    if (viewError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ current_stock_view:', viewError);
      return;
    }

    console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${viewData?.length || 0} –∑–∞–ø–∏—Å–µ–π –∏–∑ current_stock_view`);
    
    if (viewData && viewData.length > 0) {
      console.log('\nüì¶ –ü–ï–†–í–´–ï 5 –ü–†–û–î–£–ö–¢–û–í –ò–ó VIEW:');
      viewData.slice(0, 5).forEach((item, index) => {
        console.log(`\n${index + 1}. ${item.product_name}`);
        console.log(`   Product ID: ${item.product_id}`);
        console.log(`   SKU: ${item.sku}`);
        console.log(`   Current Stock: ${item.current_stock} (—Ç–∏–ø: ${typeof item.current_stock})`);
        console.log(`   Stock Status: ${item.stock_status}`);
        console.log(`   Locations with Stock: ${item.locations_with_stock}`);
        console.log(`   Price: ${item.price}`);
        console.log(`   Organization ID: ${item.organization_id}`);
      });
      
      // –ê–Ω–∞–ª–∏–∑ –æ—Å—Ç–∞—Ç–∫–æ–≤
      console.log('\nüìä –ê–ù–ê–õ–ò–ó –û–°–¢–ê–¢–ö–û–í –í VIEW:');
      const totalItems = viewData.length;
      const itemsWithStock = viewData.filter(item => item.current_stock && item.current_stock > 0);
      const itemsWithZeroStock = viewData.filter(item => !item.current_stock || item.current_stock === 0);
      const totalStock = viewData.reduce((sum, item) => sum + (Number(item.current_stock) || 0), 0);
      
      console.log(`–í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ VIEW: ${totalItems}`);
      console.log(`–¢–æ–≤–∞—Ä–æ–≤ —Å –æ—Å—Ç–∞—Ç–∫–∞–º–∏ > 0: ${itemsWithStock.length}`);
      console.log(`–¢–æ–≤–∞—Ä–æ–≤ —Å –Ω—É–ª–µ–≤—ã–º–∏ –æ—Å—Ç–∞—Ç–∫–∞–º–∏: ${itemsWithZeroStock.length}`);
      console.log(`–û–±—â–∏–π –æ—Å—Ç–∞—Ç–æ–∫ –ø–æ –≤—Å–µ–º —Ç–æ–≤–∞—Ä–∞–º: ${totalStock}`);
      
      if (itemsWithStock.length > 0) {
        console.log('\n‚úÖ –¢–û–í–ê–†–´ –° –ù–ï–ù–£–õ–ï–í–´–ú–ò –û–°–¢–ê–¢–ö–ê–ú–ò:');
        itemsWithStock.forEach((item, index) => {
          console.log(`${index + 1}. ${item.product_name}: ${item.current_stock}`);
        });
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–æ–ª–µ–π
      console.log('\nüîç –°–¢–†–£–ö–¢–£–†–ê –ü–û–õ–ï–ô –í VIEW:');
      const firstItem = viewData[0];
      Object.keys(firstItem).forEach(key => {
        const value = firstItem[key];
        console.log(`${key}: ${typeof value} = ${value}`);
      });
      
    } else {
      console.log('‚ùå current_stock_view –ø—É—Å—Ç –∏–ª–∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è organization_id = 1');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ö–æ–¥–Ω—É—é —Ç–∞–±–ª–∏—Ü—É products
    console.log('\n2Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –¢–ê–ë–õ–ò–¶–´ products:');
    
    const { data: productsData, error: productsError } = await supabaseAdmin
      .from('products')
      .select('id, name, organization_id')
      .eq('organization_id', organizationId)
      .limit(5);

    if (productsError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ products:', productsError);
    } else {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${productsData?.length || 0} –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≤ —Ç–∞–±–ª–∏—Ü–µ products`);
      if (productsData && productsData.length > 0) {
        console.log('–ü–µ—Ä–≤—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã:');
        productsData.forEach((product, index) => {
          console.log(`${index + 1}. ID: ${product.id}, Name: ${product.name}`);
        });
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É operations
    console.log('\n3Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –¢–ê–ë–õ–ò–¶–´ operations:');
    
    const { data: operationsData, error: operationsError } = await supabaseAdmin
      .from('operations')
      .select('id, product_id, operation_type, quantity, organization_id')
      .eq('organization_id', organizationId)
      .limit(10);

    if (operationsError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ operations:', operationsError);
    } else {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${operationsData?.length || 0} –æ–ø–µ—Ä–∞—Ü–∏–π –≤ —Ç–∞–±–ª–∏—Ü–µ operations`);
      if (operationsData && operationsData.length > 0) {
        console.log('–ü–µ—Ä–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏:');
        operationsData.forEach((op, index) => {
          console.log(`${index + 1}. Product: ${op.product_id}, Type: ${op.operation_type}, Qty: ${op.quantity}`);
        });
        
        // –ê–Ω–∞–ª–∏–∑ —Ç–∏–ø–æ–≤ –æ–ø–µ—Ä–∞—Ü–∏–π
        const operationTypes = [...new Set(operationsData.map(op => op.operation_type))];
        console.log('–ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ç–∏–ø—ã –æ–ø–µ—Ä–∞—Ü–∏–π:', operationTypes.join(', '));
      }
    }
    
    console.log('\nüéØ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê:');
    
    if (viewData && viewData.length > 0) {
      const hasRealStock = viewData.some(item => item.current_stock && item.current_stock > 0);
      if (hasRealStock) {
        console.log('‚úÖ current_stock_view —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–≤–∞—Ä—ã —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –æ—Å—Ç–∞—Ç–∫–∞–º–∏');
        console.log('‚û°Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ –ù–ï –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
        console.log('‚û°Ô∏è –ù—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å backend –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä');
      } else {
        console.log('‚ùå current_stock_view —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ –Ω—É–ª–µ–≤—ã–µ –æ—Å—Ç–∞—Ç–∫–∏');
        console.log('‚û°Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ –≤ –ª–æ–≥–∏–∫–µ VIEW –∏–ª–∏ –¥–∞–Ω–Ω—ã—Ö operations');
        console.log('‚û°Ô∏è –í–æ–∑–º–æ–∂–Ω–æ –Ω–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏–π supply –∏–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø–æ–¥—Å—á–µ—Ç–∞');
      }
    } else {
      console.log('‚ùå current_stock_view –ø—É—Å—Ç');
      console.log('‚û°Ô∏è VIEW –Ω–µ —Å–æ–∑–¥–∞–Ω –∏–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è organization_id = 1');
    }
    
  } catch (error) {
    console.error('üí• –û–®–ò–ë–ö–ê:', error);
  }
}

console.log('–ó–∞–ø—É—Å–∫ –∞—É–¥–∏—Ç–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
auditDatabaseView(); 