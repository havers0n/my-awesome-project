const axios = require('axios');

const BASE_URL = 'http://localhost:3000';

// –¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–∫–µ–Ω (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –µ—Å–ª–∏ –Ω—É–∂–Ω–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è)
const TEST_TOKEN = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.test';

async function testApiEndpoints() {
  console.log('üîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï API –≠–ù–î–ü–û–ò–ù–¢–û–í –î–õ–Ø –ú–û–î–ê–õ–¨–ù–û–ì–û –û–ö–ù–ê');
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —ç–Ω–¥–ø–æ–∏–Ω—Ç —Ç–æ–≤–∞—Ä–æ–≤
    console.log('\n1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ GET /api/inventory/products');
    try {
      const response = await axios.get(`${BASE_URL}/api/inventory/products`, {
        headers: {
          'Authorization': `Bearer ${TEST_TOKEN}`
        }
      });
      
      console.log('‚úÖ –°—Ç–∞—Ç—É—Å:', response.status);
      console.log('‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤:', response.data?.data?.length || 0);
      
      if (response.data?.data?.length > 0) {
        const firstProduct = response.data.data[0];
        console.log('üì¶ –ü–µ—Ä–≤—ã–π —Ç–æ–≤–∞—Ä:', {
          id: firstProduct.product_id,
          name: firstProduct.product_name,
          current_stock: firstProduct.current_stock,
          stock_by_location: firstProduct.stock_by_location?.length || 0
        });
        
        // –ü—Ä–æ–≤–µ—Ä–∏–º stock_by_location —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        if (firstProduct.stock_by_location && firstProduct.stock_by_location.length > 0) {
          console.log('üìç –ü–µ—Ä–≤–∞—è –ª–æ–∫–∞—Ü–∏—è –≤ stock_by_location:', firstProduct.stock_by_location[0]);
        }
        
        // –¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –¥–ª—è —ç—Ç–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
        const testProductId = firstProduct.product_id;
        
        // 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–π
        console.log(`\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ GET /api/inventory/products/${testProductId}/operations`);
        try {
          const operationsResponse = await axios.get(`${BASE_URL}/api/inventory/products/${testProductId}/operations`, {
            headers: {
              'Authorization': `Bearer ${TEST_TOKEN}`
            }
          });
          
          console.log('‚úÖ –°—Ç–∞—Ç—É—Å –æ–ø–µ—Ä–∞—Ü–∏–π:', operationsResponse.status);
          console.log('‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø–µ—Ä–∞—Ü–∏–π:', operationsResponse.data?.operations?.length || 0);
          
          if (operationsResponse.data?.operations?.length > 0) {
            console.log('üìã –ü–µ—Ä–≤–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è:', operationsResponse.data.operations[0]);
          }
        } catch (error) {
          console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π:', error.response?.status, error.response?.data?.error || error.message);
        }
        
        // 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤
        console.log('\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ GET /api/inventory/suppliers');
        try {
          const suppliersResponse = await axios.get(`${BASE_URL}/api/inventory/suppliers`, {
            headers: {
              'Authorization': `Bearer ${TEST_TOKEN}`
            }
          });
          
          console.log('‚úÖ –°—Ç–∞—Ç—É—Å –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤:', suppliersResponse.status);
          console.log('‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤:', suppliersResponse.data?.length || 0);
          
          if (suppliersResponse.data?.length > 0) {
            console.log('üöö –ü–µ—Ä–≤—ã–π –ø–æ—Å—Ç–∞–≤—â–∏–∫:', suppliersResponse.data[0]);
            
            // 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–µ
            const firstSupplierId = suppliersResponse.data[0].id;
            console.log(`\n4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ GET /api/inventory/suppliers/${firstSupplierId}/delivery-info`);
            try {
              const supplierInfoResponse = await axios.get(`${BASE_URL}/api/inventory/suppliers/${firstSupplierId}/delivery-info`, {
                headers: {
                  'Authorization': `Bearer ${TEST_TOKEN}`
                }
              });
              
              console.log('‚úÖ –°—Ç–∞—Ç—É—Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:', supplierInfoResponse.status);
              console.log('‚úÖ –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:', supplierInfoResponse.data?.analytics);
            } catch (error) {
              console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:', error.response?.status, error.response?.data?.error || error.message);
            }
          }
        } catch (error) {
          console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤:', error.response?.status, error.response?.data?.error || error.message);
        }
      }
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤:', error.response?.status, error.response?.data?.error || error.message);
    }
    
    // 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    console.log('\n5Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ GET /api/inventory/products-test (–±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏)');
    try {
      const testResponse = await axios.get(`${BASE_URL}/api/inventory/products-test`);
      console.log('‚úÖ –°—Ç–∞—Ç—É—Å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞:', testResponse.status);
      console.log('‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ (—Ç–µ—Å—Ç):', testResponse.data?.data?.length || 0);
      
      if (testResponse.data?.data?.length > 0) {
        const testProduct = testResponse.data.data[0];
        console.log('üì¶ –¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä:', {
          id: testProduct.product_id,
          name: testProduct.product_name,
          current_stock: testProduct.current_stock,
          stock_status: testProduct.stock_status,
          stock_by_location_count: testProduct.stock_by_location?.length || 0
        });
        
        if (testProduct.stock_by_location && testProduct.stock_by_location.length > 0) {
          console.log('üìç –õ–æ–∫–∞—Ü–∏–∏ –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ç–æ–≤–∞—Ä–µ:', testProduct.stock_by_location);
        }
      }
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞:', error.response?.status, error.response?.data?.error || error.message);
    }
    
  } catch (error) {
    console.log('üí• –û–±—â–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
  }
  
  console.log('\nüéØ –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï:');
  console.log('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –∫–∞–∫–∏–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ, –∞ –∫–∞–∫–∏–µ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç –æ—à–∏–±–∫–∏.');
  console.log('–û—Å–æ–±–æ–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—É stock_by_location - –µ—Å—Ç—å –ª–∏ location_name.');
}

testApiEndpoints().catch(console.error); 