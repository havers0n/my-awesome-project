require('dotenv').config();
const { supabaseAdmin } = require('./dist/supabaseAdminClient.js');

async function checkViewExistence() {
  try {
    console.log('üîç –ü–†–û–í–ï–†–ö–ê –°–£–©–ï–°–¢–í–û–í–ê–ù–ò–Ø VIEW current_stock_view');
    console.log('='.repeat(60));
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ VIEW —á–µ—Ä–µ–∑ –ø—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å
    console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ current_stock_view...');
    
    const { data: viewData, error: viewError } = await supabaseAdmin
      .from('current_stock_view')
      .select('*')
      .limit(3);

    if (viewError) {
      console.error('‚ùå VIEW current_stock_view –ù–ï –°–£–©–ï–°–¢–í–£–ï–¢:', viewError);
      console.log('\nüîß –†–ï–®–ï–ù–ò–ï:');
      console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ Supabase Dashboard > SQL Editor');
      console.log('2. –í—ã–ø–æ–ª–Ω–∏—Ç–µ SQL –∏–∑ —Ñ–∞–π–ª–∞: database/create_current_stock_view_FIXED.sql');
      console.log('3. –ò–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ SQL –∏–∑ —Ñ–∞–π–ª–∞: database/CORRECT_current_stock_view.sql');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ VIEW
      console.log('\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ VIEW...');
      
      const { data: altData, error: altError } = await supabaseAdmin
        .from('stock_by_location_view')
        .select('*')
        .limit(1);
      
      if (altError) {
        console.error('‚ùå stock_by_location_view —Ç–æ–∂–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:', altError);
      } else {
        console.log('‚úÖ stock_by_location_view —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!');
      }
      
      return;
    }

    console.log(`‚úÖ VIEW current_stock_view —Å—É—â–µ—Å—Ç–≤—É–µ—Ç! –ù–∞–π–¥–µ–Ω–æ ${viewData?.length || 0} –∑–∞–ø–∏—Å–µ–π`);
    
    if (viewData && viewData.length > 0) {
      console.log('\nüì¶ –î–ê–ù–ù–´–ï –ò–ó current_stock_view:');
      viewData.forEach((row, index) => {
        console.log(`${index + 1}. Product ID: ${row.product_id}, Stock: ${row.current_stock}, Status: ${row.stock_status}`);
      });
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É VIEW
    console.log('\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É current_stock_view...');
    
    const { data: structureData, error: structureError } = await supabaseAdmin
      .from('current_stock_view')
      .select('*')
      .eq('organization_id', 1)
      .limit(1);

    if (structureError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã:', structureError);
    } else if (structureData && structureData.length > 0) {
      console.log('‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ VIEW:');
      console.log(JSON.stringify(structureData[0], null, 2));
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É products
    console.log('\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É products...');
    
    const { data: productsData, error: productsError } = await supabaseAdmin
      .from('products')
      .select('id, name, organization_id')
      .eq('organization_id', 1)
      .limit(3);

    if (productsError) {
      console.error('‚ùå –¢–∞–±–ª–∏—Ü–∞ products –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞:', productsError);
    } else {
      console.log(`‚úÖ –¢–∞–±–ª–∏—Ü–∞ products –¥–æ—Å—Ç—É–ø–Ω–∞! –ù–∞–π–¥–µ–Ω–æ ${productsData?.length || 0} –∑–∞–ø–∏—Å–µ–π`);
      if (productsData && productsData.length > 0) {
        console.log('–ü–µ—Ä–≤—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã:');
        productsData.forEach((product, index) => {
          console.log(`${index + 1}. ID: ${product.id}, Name: ${product.name}`);
        });
      }
    }

    console.log('\nüîß –ü–†–û–ë–õ–ï–ú–ê –° JOIN:');
    console.log('VIEW current_stock_view —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–æ Supabase –Ω–µ –º–æ–∂–µ—Ç –¥–µ–ª–∞—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π JOIN');
    console.log('–ü—Ä–∏—á–∏–Ω–∞: –Ω–µ—Ç foreign key —Å–≤—è–∑–∏ –º–µ–∂–¥—É products –∏ current_stock_view');
    
    console.log('\nüí° –í–û–ó–ú–û–ñ–ù–´–ï –†–ï–®–ï–ù–ò–Ø:');
    console.log('1. –°–æ–∑–¥–∞—Ç—å foreign key —Å–≤—è–∑—å (—Å–ª–æ–∂–Ω–æ –¥–ª—è VIEW)');
    console.log('2. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å RPC —Ñ—É–Ω–∫—Ü–∏—é (–∫–∞–∫ –º—ã –¥–µ–ª–∞–ª–∏ —Ä–∞–Ω–µ–µ)');
    console.log('3. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å manual join –∫–∞–∫ –≤ Promise.all –ø–æ–¥—Ö–æ–¥–µ');
    console.log('4. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –º–æ–∂–Ω–æ –ª–∏ –¥–æ–±–∞–≤–∏—Ç—å foreign key constraint –≤ VIEW');
    
  } catch (error) {
    console.error('üí• –û–®–ò–ë–ö–ê:', error);
  }
}

console.log('–ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è VIEW...');
checkViewExistence(); 