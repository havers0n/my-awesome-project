import React, { useState } from 'react';
import ShelfAvailabilityMenu from '@/components/inventory/ShelfAvailabilityMenu';
import ComponentCard from '@/components/common/ComponentCard';
import PageMeta from '@/components/common/PageMeta';
import PageBreadcrumb from '@/components/common/PageBreadCrumb';
import Button from '@/components/ui/button/Button';
import { useModal } from '@/hooks/useModal';

interface ProductAvailability {
  id: string;
  product_name: string;
  total_stock: number;
  available_stock: number;
  reserved_stock: number;
  last_restock_date: string;
  out_of_stock_hours: number;
  status: 'available' | 'low_stock' | 'out_of_stock' | 'critical';
  shelf_location: string;
}

const ShelfAvailabilityPage = () => {
  const [selectedProduct, setSelectedProduct] = useState<ProductAvailability | null>(null);
  const { isOpen, openModal, closeModal } = useModal();

  const handleProductSelect = (product: ProductAvailability) => {
    setSelectedProduct(product);
    openModal();
  };

  const handleQuickAction = (action: string, product: ProductAvailability) => {
    console.log(`Action: ${action} for product:`, product);
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
    switch (action) {
      case 'restock':
        alert(`–ó–∞–∫–∞–∑–∞—Ç—å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–ª—è ${product.product_name}`);
        break;
      case 'reserve':
        alert(`–ó–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞—Ç—å ${product.product_name}`);
        break;
      case 'location':
        alert(`–ü–µ—Ä–µ–π—Ç–∏ –∫ –ø–æ–ª–∫–µ ${product.shelf_location}`);
        break;
      default:
        break;
    }
    closeModal();
  };

  return (
    <>
      <PageMeta title="–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ –ø–æ–ª–∫–µ" />
      <div className="mb-6">
        <PageBreadcrumb pageTitle="–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–æ–≤" />
      </div>

      <div className="grid grid-cols-1 gap-6">
        {/* –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ */}
        <ComponentCard title="" className="">
          <ShelfAvailabilityMenu 
            onProductSelect={handleProductSelect}
            showFilters={true}
          />
        </ComponentCard>

        {/* –ö—Ä–∞—Ç–∫–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ */}
        <ComponentCard title="–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é" className="">
          <div className="space-y-4 text-sm text-gray-600">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <h4 className="font-medium text-gray-900 mb-2">–°—Ç–∞—Ç—É—Å—ã —Ç–æ–≤–∞—Ä–æ–≤:</h4>
                <ul className="space-y-2">
                  <li className="flex items-center">
                    <span className="text-green-500 mr-2">‚úÖ</span>
                    <span><strong>–í –Ω–∞–ª–∏—á–∏–∏</strong> - —Ç–æ–≤–∞—Ä –µ—Å—Ç—å –≤ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ</span>
                  </li>
                  <li className="flex items-center">
                    <span className="text-yellow-500 mr-2">‚ö†Ô∏è</span>
                    <span><strong>–ó–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è</strong> - –æ—Å—Ç–∞—Ç–æ–∫ –º–µ–Ω–µ–µ 30% –æ—Ç –æ–±—â–µ–≥–æ –æ–±—ä–µ–º–∞</span>
                  </li>
                  <li className="flex items-center">
                    <span className="text-orange-500 mr-2">üî∂</span>
                    <span><strong>–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –º–∞–ª–æ</strong> - –æ—Å—Ç–∞—Ç–æ–∫ –º–µ–Ω–µ–µ 10% –æ—Ç –æ–±—â–µ–≥–æ –æ–±—ä–µ–º–∞</span>
                  </li>
                  <li className="flex items-center">
                    <span className="text-red-500 mr-2">‚ùå</span>
                    <span><strong>–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç</strong> - —Ç–æ–≤–∞—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏</span>
                  </li>
                </ul>
              </div>
              <div>
                <h4 className="font-medium text-gray-900 mb-2">–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ–∏—Å–∫–∞:</h4>
                <ul className="space-y-2">
                  <li>‚Ä¢ –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é —Ç–æ–≤–∞—Ä–∞</li>
                  <li>‚Ä¢ –ü–æ–∏—Å–∫ –ø–æ –Ω–æ–º–µ—Ä—É –ø–æ–ª–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, A1-01)</li>
                  <li>‚Ä¢ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Å—Ç–∞—Ç—É—Å—É –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏</li>
                  <li>‚Ä¢ –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —Ä–∞–∑–ª–∏—á–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º</li>
                </ul>
                
                <h4 className="font-medium text-gray-900 mb-2 mt-4">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</h4>
                <ul className="space-y-2">
                  <li>‚Ä¢ üìç –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –ø–æ–ª–∫–µ</li>
                  <li>‚Ä¢ üì¶ –î–æ—Å—Ç—É–ø–Ω–æ–µ/–æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ</li>
                  <li>‚Ä¢ üîí –ó–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã</li>
                  <li>‚Ä¢ ‚è±Ô∏è –í—Ä–µ–º—è –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Ç–æ–≤–∞—Ä–∞</li>
                </ul>
              </div>
            </div>
          </div>
        </ComponentCard>

        {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
        <ComponentCard title="–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è" className="">
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            <Button 
              variant="outline" 
              size="md"
              onClick={() => window.location.reload()}
              className="flex items-center justify-center"
            >
              <span className="mr-2">üîÑ</span>
              –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
            </Button>
            <Button 
              variant="outline" 
              size="md"
              onClick={() => alert('–≠–∫—Å–ø–æ—Ä—Ç –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ')}
              className="flex items-center justify-center"
            >
              <span className="mr-2">üì•</span>
              –≠–∫—Å–ø–æ—Ä—Ç –æ—Ç—á–µ—Ç–∞
            </Button>
            <Button 
              variant="outline" 
              size="md"
              onClick={() => alert('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ')}
              className="flex items-center justify-center"
            >
              <span className="mr-2">‚öôÔ∏è</span>
              –ù–∞—Å—Ç—Ä–æ–π–∫–∏
            </Button>
          </div>
        </ComponentCard>
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–æ–≤–∞—Ä–µ */}
      {isOpen && selectedProduct && (
        <div className="fixed inset-0 z-50 overflow-y-auto">
          <div className="flex items-center justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
            <div className="fixed inset-0 transition-opacity" aria-hidden="true">
              <div className="absolute inset-0 bg-gray-500 opacity-75" onClick={closeModal}></div>
            </div>

            <div className="inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full">
              <div className="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
                <div className="sm:flex sm:items-start">
                  <div className="mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left w-full">
                    <h3 className="text-lg leading-6 font-medium text-gray-900 mb-4">
                      {selectedProduct.product_name}
                    </h3>
                    <div className="space-y-3">
                      <div className="flex justify-between">
                        <span className="text-gray-600">–°—Ç–∞—Ç—É—Å:</span>
                        <span className={`px-2 py-1 rounded text-xs ${
                          selectedProduct.status === 'available' ? 'bg-green-100 text-green-800' :
                          selectedProduct.status === 'low_stock' ? 'bg-yellow-100 text-yellow-800' :
                          selectedProduct.status === 'critical' ? 'bg-orange-100 text-orange-800' :
                          'bg-red-100 text-red-800'
                        }`}>
                          {selectedProduct.status === 'available' ? '–í –Ω–∞–ª–∏—á–∏–∏' :
                           selectedProduct.status === 'low_stock' ? '–ó–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è' :
                           selectedProduct.status === 'critical' ? '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –º–∞–ª–æ' :
                           '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}
                        </span>
                      </div>
                      <div className="flex justify-between">
                        <span className="text-gray-600">–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ:</span>
                        <span className="font-medium">{selectedProduct.shelf_location}</span>
                      </div>
                      <div className="flex justify-between">
                        <span className="text-gray-600">–î–æ—Å—Ç—É–ø–Ω–æ:</span>
                        <span className="font-medium">{selectedProduct.available_stock} —à—Ç.</span>
                      </div>
                      <div className="flex justify-between">
                        <span className="text-gray-600">–û–±—â–∏–π –∑–∞–ø–∞—Å:</span>
                        <span className="font-medium">{selectedProduct.total_stock} —à—Ç.</span>
                      </div>
                      <div className="flex justify-between">
                        <span className="text-gray-600">–ó–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–æ:</span>
                        <span className="font-medium">{selectedProduct.reserved_stock} —à—Ç.</span>
                      </div>
                      {selectedProduct.out_of_stock_hours > 0 && (
                        <div className="flex justify-between">
                          <span className="text-gray-600">–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç:</span>
                          <span className="font-medium text-red-600">{selectedProduct.out_of_stock_hours} —á–∞—Å–æ–≤</span>
                        </div>
                      )}
                      <div className="flex justify-between">
                        <span className="text-gray-600">–ü–æ—Å–ª–µ–¥–Ω–µ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ:</span>
                        <span className="font-medium">{new Date(selectedProduct.last_restock_date).toLocaleDateString()}</span>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              <div className="bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse space-y-2 sm:space-y-0 sm:space-x-reverse sm:space-x-2">
                <Button
                  variant="primary"
                  size="sm"
                  onClick={() => handleQuickAction('restock', selectedProduct)}
                  className="w-full sm:w-auto"
                >
                  –ó–∞–∫–∞–∑–∞—Ç—å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
                </Button>
                <Button
                  variant="outline"
                  size="sm"
                  onClick={() => handleQuickAction('location', selectedProduct)}
                  className="w-full sm:w-auto"
                >
                  –ü–µ—Ä–µ–π—Ç–∏ –∫ –ø–æ–ª–∫–µ
                </Button>
                <Button
                  variant="outline"
                  size="sm"
                  onClick={closeModal}
                  className="w-full sm:w-auto"
                >
                  –ó–∞–∫—Ä—ã—Ç—å
                </Button>
              </div>
            </div>
          </div>
        </div>
      )}
    </>
  );
};

export default ShelfAvailabilityPage;
