import React from 'react';\nimport LayoutManager from '../components/LayoutManager';\nimport { useLayoutHistory } from '../hooks/useLayoutHistory';\nimport { useAutoSave } from '../hooks/useAutoSave';\nimport { useLayoutSync } from '../hooks/useLayoutSync';\n\nconst StateManagementExample: React.FC = () => {\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"container mx-auto py-8\">\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\n            Система управления состоянием Dashboard Layout\n          </h1>\n          <p className=\"text-gray-600\">\n            Демонстрация функциональности undo/redo, автосохранения и синхронизации\n          </p>\n        </div>\n        \n        <div className=\"bg-white rounded-lg shadow-lg p-6\">\n          <LayoutManager>\n            <div className=\"mt-8 p-4 bg-blue-50 rounded-lg\">\n              <h2 className=\"text-xl font-semibold text-blue-900 mb-4\">\n                Возможности системы:\n              </h2>\n              <ul className=\"space-y-2 text-blue-800\">\n                <li>• Undo/Redo операции с клавиатурными сокращениями (Ctrl+Z, Ctrl+Y)</li>\n                <li>• Автоматическое сохранение в localStorage/IndexedDB</li>\n                <li>• Синхронизация в реальном времени через WebSocket</li>\n                <li>• Управление историей изменений</li>\n                <li>• Обработка ошибок и восстановление состояния</li>\n                <li>• Отслеживание статуса синхронизации</li>\n              </ul>\n            </div>\n          </LayoutManager>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StateManagementExample;
