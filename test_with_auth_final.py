import requests
import json
import os

def test_with_auth_final():
    print("üß™ –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –° –ê–£–¢–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–ï–ô")
    print("=" * 45)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è
    print("\n1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è...")
    ml_url = os.environ.get('ML_SERVICE_URL', 'http://127.0.0.1:8000/predict')
    print(f"   ML_SERVICE_URL: {ml_url}")
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ backend
    print("\n2. –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ backend...")
    import time
    time.sleep(10)
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ backend
    print("\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ backend...")
    try:
        backend_response = requests.get("http://localhost:3000/health")
        print(f"   ‚úÖ Backend –¥–æ—Å—Ç—É–ø–µ–Ω: {backend_response.status_code}")
    except Exception as e:
        print(f"   ‚ùå Backend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
        return
    
    # –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    print("\n4. –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏...")
    try:
        auth_payload = {
            "email": "danypetrov2002@gmail.com",
            "password": "your_password_here"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å
        }
        
        auth_response = requests.post(
            "http://localhost:3000/api/auth/login",
            headers={"Content-Type": "application/json"},
            data=json.dumps(auth_payload),
            timeout=10
        )
        
        if auth_response.status_code == 200:
            auth_data = auth_response.json()
            token = auth_data.get('access_token')
            print(f"   ‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: {token[:20]}...")
        else:
            print(f"   ‚ö†Ô∏è –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å: {auth_response.status_code}")
            print("   –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ç–æ–∫–µ–Ω...")
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ç–æ–∫–µ–Ω –∏–∑ –ª–æ–≥–æ–≤
            token = "eyJhbGciOiJIUzI1NiIsImtpZCI6IjZqeGVNTzVvSnpuV3VOdkMiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL3V4Y3N6aXlsbXlvZ3ZjcXl5dWl3LnN1cGFiYXNlLmNvL2F1dGgvdjEiLCJzdWIiOiI5NzIwMDdmNS0zMDVmLTQ5Y2EtYTM1MS1lYTU1MjBhMDk4MmMiLCJhdWQiOiJhdXRoZW50aWNhdGVkIiwiZXhwIjoxNzUzMDEyMzEwLCJpYXQiOjE3NTMwMDg3MTAsImVtYWlsIjoiZGFueXBldHJvdjIwMDJAZ21haWwuY29tIiwicGhvbmUiOiIiLCJhcHBfbWV0YWRhdGEiOnsicHJvdmlkZXIiOiJlbWFpbCIsInByb3ZpZGVycyI6WyJlbWFpbCJdfSwidXNlcl9tZXRhZGF0YSI6eyJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZnVsbF9uYW1lIjoiZGFuaWVsIGhhdmVyc29uIn0sInJvbGUiOiJhdXRoZW50aWNhdGVkIiwiYWFsIjoiYWFsMSIsImFtciI6W3sibWV0aG9kIjoicGFzc3dvcmQiLCJ0aW1lc3RhbXAiOjE3NTMwMDg3MTB9XSwic2Vzc2lvbl9pZCI6IjZhNTUyMjgxLTNkZGItNGFiNS05ODZkLTRkMzg0ZmU3ODY0MiIsImlzX2Fub255bW91cyI6ZmFsc2V9.THFpYU_PcsnzVaYv8EjOYM4Uy4p8Mxc5JujcrVKdzBI"
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: {e}")
        return
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\n5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    try:
        profile_response = requests.get(
            "http://localhost:3000/api/auth/me",
            headers={"Authorization": f"Bearer {token}"},
            timeout=10
        )
        
        if profile_response.status_code == 200:
            profile_data = profile_response.json()
            print(f"   ‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—É—á–µ–Ω: {profile_data.get('email')}")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è: {profile_response.status_code}")
            return
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è: {e}")
        return
    
    # –¢–µ—Å—Ç 4: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ CSV
    print("\n6. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ CSV...")
    try:
        products_response = requests.get(
            "http://localhost:3000/api/forecast/csv-products",
            headers={"Authorization": f"Bearer {token}"},
            timeout=30
        )
        
        if products_response.status_code == 200:
            products_data = products_response.json()
            print(f"   ‚úÖ –¢–æ–≤–∞—Ä—ã –ø–æ–ª—É—á–µ–Ω—ã: {len(products_data)} –∑–∞–ø–∏—Å–µ–π")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤: {products_response.status_code}")
            print(f"      –û—Ç–≤–µ—Ç: {products_response.text}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤: {e}")
    
    # –¢–µ—Å—Ç 5: –ü–æ–ª—É—á–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫ CSV
    print("\n7. –ü–æ–ª—É—á–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫ CSV...")
    try:
        metrics_response = requests.get(
            "http://localhost:3000/api/forecast/csv-metrics",
            headers={"Authorization": f"Bearer {token}"},
            timeout=30
        )
        
        if metrics_response.status_code == 200:
            metrics_data = metrics_response.json()
            print(f"   ‚úÖ –ú–µ—Ç—Ä–∏–∫–∏ –ø–æ–ª—É—á–µ–Ω—ã: {metrics_data.get('data', {}).get('avgMape', 'N/A')}% MAPE")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –º–µ—Ç—Ä–∏–∫: {metrics_response.status_code}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –º–µ—Ç—Ä–∏–∫: {e}")
    
    # –¢–µ—Å—Ç 6: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–æ–≥–Ω–æ–∑–∞ CSV
    print("\n8. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–æ–≥–Ω–æ–∑–∞ CSV...")
    try:
        forecast_payload = {"DaysCount": 7}
        forecast_response = requests.post(
            "http://localhost:3000/api/forecast/predict-csv",
            headers={
                "Authorization": f"Bearer {token}",
                "Content-Type": "application/json"
            },
            data=json.dumps(forecast_payload),
            timeout=60
        )
        
        print(f"   –°—Ç–∞—Ç—É—Å: {forecast_response.status_code}")
        
        if forecast_response.status_code == 200:
            forecast_data = forecast_response.json()
            print(f"   ‚úÖ –ü—Ä–æ–≥–Ω–æ–∑ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
            print(f"      –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π: {len(forecast_data.get('data', []))}")
        elif forecast_response.status_code == 502:
            print(f"   ‚ùå ML —Å–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {forecast_response.text}")
        else:
            print(f"   ‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {forecast_response.status_code}")
            print(f"      –û—Ç–≤–µ—Ç: {forecast_response.text}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
    
    print("\n9. –ò—Ç–æ–≥–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞...")
    print("   üéØ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
    print("   üåê –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä: http://localhost:5173/sales-forecast-csv")
    print("   üìù –¢–µ–ø–µ—Ä—å –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ")

if __name__ == "__main__":
    test_with_auth_final() 