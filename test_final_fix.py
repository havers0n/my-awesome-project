import requests
import json
import os

def test_final_fix():
    print("üß™ –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø ML –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø")
    print("=" * 55)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è
    print("\n1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è...")
    ml_url = os.environ.get('ML_SERVICE_URL', 'http://127.0.0.1:8000/predict')
    print(f"   ML_SERVICE_URL: {ml_url}")
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ ML —Å–µ—Ä–≤–∏—Å–∞
    print("\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ ML —Å–µ—Ä–≤–∏—Å–∞...")
    try:
        ml_response = requests.get("http://localhost:8000/health")
        print(f"   ‚úÖ ML —Å–µ—Ä–≤–∏—Å –¥–æ—Å—Ç—É–ø–µ–Ω: {ml_response.status_code}")
    except Exception as e:
        print(f"   ‚ùå ML —Å–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
        return
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ backend
    print("\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ backend...")
    try:
        backend_response = requests.get("http://localhost:3000/health")
        print(f"   ‚úÖ Backend –¥–æ—Å—Ç—É–ø–µ–Ω: {backend_response.status_code}")
    except Exception as e:
        print(f"   ‚ùå Backend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
        return
    
    # –¢–µ—Å—Ç 3: –¢–µ—Å—Ç –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞–ø—Ä—è–º—É—é –∫ ML —Å–µ—Ä–≤–∏—Å—É
    print("\n4. –¢–µ—Å—Ç –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞–ø—Ä—è–º—É—é –∫ ML —Å–µ—Ä–≤–∏—Å—É...")
    try:
        ml_payload = {
            "DaysCount": 7,
            "events": [
                {
                    "Type": "–ü—Ä–æ–¥–∞–∂–∞",
                    "–ü–µ—Ä–∏–æ–¥": "2025-01-01",
                    "–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞": "–ê–±—Ä–∏–∫–æ—Å–æ–≤—ã–π –∞—Ä–æ–º–∞—Ç 0,4–∫–≥",
                    "–ö–æ–¥": "CSV_1",
                    "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ": 5,
                    "–¶–µ–Ω–∞": 100.0
                }
            ]
        }
        
        ml_forecast_response = requests.post(
            "http://127.0.0.1:8000/predict",
            headers={"Content-Type": "application/json"},
            data=json.dumps(ml_payload),
            timeout=30
        )
        
        if ml_forecast_response.status_code == 200:
            result = ml_forecast_response.json()
            print(f"   ‚úÖ ML –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print(f"      –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π: {len(result) if isinstance(result, list) else 'N/A'}")
        else:
            print(f"   ‚ùå ML –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∞: {ml_forecast_response.status_code}")
            print(f"      –û—Ç–≤–µ—Ç: {ml_forecast_response.text}")
    except Exception as e:
        print(f"   ‚ùå ML –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 4: –¢–µ—Å—Ç —á–µ—Ä–µ–∑ backend (–±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏)
    print("\n5. –¢–µ—Å—Ç —á–µ—Ä–µ–∑ backend (–±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏)...")
    try:
        csv_forecast_payload = {"DaysCount": 7}
        csv_forecast_response = requests.post(
            "http://localhost:3000/api/forecast/predict-csv",
            headers={"Content-Type": "application/json"},
            data=json.dumps(csv_forecast_payload),
            timeout=30
        )
        print(f"   –°—Ç–∞—Ç—É—Å: {csv_forecast_response.status_code}")
        if csv_forecast_response.status_code == 401:
            print("   ‚úÖ Backend –º–∞—Ä—à—Ä—É—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç (—Ç—Ä–µ–±—É–µ—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏)")
        elif csv_forecast_response.status_code == 502:
            print("   ‚ùå Backend –Ω–µ –º–æ–∂–µ—Ç –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ ML —Å–µ—Ä–≤–∏—Å—É")
            print(f"      –û—Ç–≤–µ—Ç: {csv_forecast_response.text}")
        else:
            print(f"   ‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {csv_forecast_response.status_code}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è backend: {e}")
    
    print("\n6. –ò—Ç–æ–≥–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞...")
    print("   üéØ –ï—Å–ª–∏ –≤—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ —Ä–µ—à–µ–Ω–∞!")
    print("   üåê –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä: http://localhost:5173/sales-forecast-csv")
    print("   üìù –¢–µ–ø–µ—Ä—å –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ")

if __name__ == "__main__":
    test_final_fix() 