import requests
import json

def test_ml_only():
    print("üß™ –¢–ï–°–¢ –¢–û–õ–¨–ö–û ML –°–ï–†–í–ò–°–ê")
    print("=" * 30)
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ ML —Å–µ—Ä–≤–∏—Å–∞
    print("\n1. –ü—Ä–æ–≤–µ—Ä–∫–∞ ML —Å–µ—Ä–≤–∏—Å–∞...")
    try:
        ml_response = requests.get("http://localhost:8000/health")
        print(f"   ‚úÖ ML —Å–µ—Ä–≤–∏—Å –¥–æ—Å—Ç—É–ø–µ–Ω: {ml_response.status_code}")
    except Exception as e:
        print(f"   ‚ùå ML —Å–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
        return
    
    # –¢–µ—Å—Ç 2: –¢–µ—Å—Ç –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞–ø—Ä—è–º—É—é –∫ ML —Å–µ—Ä–≤–∏—Å—É
    print("\n2. –¢–µ—Å—Ç –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞–ø—Ä—è–º—É—é –∫ ML —Å–µ—Ä–≤–∏—Å—É...")
    try:
        ml_payload = {
            "DaysCount": 7,
            "events": [
                {
                    "Type": "–ü—Ä–æ–¥–∞–∂–∞",
                    "–ü–µ—Ä–∏–æ–¥": "2025-01-01",
                    "–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞": "–ê–±—Ä–∏–∫–æ—Å–æ–≤—ã–π –∞—Ä–æ–º–∞—Ç 0,4–∫–≥",
                    "–ö–æ–¥": "CSV_1",
                    "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ": 5,
                    "–¶–µ–Ω–∞": 100.0
                }
            ]
        }
        
        ml_forecast_response = requests.post(
            "http://127.0.0.1:8000/predict",
            headers={"Content-Type": "application/json"},
            data=json.dumps(ml_payload),
            timeout=30
        )
        
        if ml_forecast_response.status_code == 200:
            result = ml_forecast_response.json()
            print(f"   ‚úÖ ML –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print(f"      –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π: {len(result) if isinstance(result, list) else 'N/A'}")
            print(f"      –ü–µ—Ä–≤–∞—è –∑–∞–ø–∏—Å—å: {result[0] if isinstance(result, list) and len(result) > 0 else 'N/A'}")
        else:
            print(f"   ‚ùå ML –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∞: {ml_forecast_response.status_code}")
            print(f"      –û—Ç–≤–µ—Ç: {ml_forecast_response.text}")
    except Exception as e:
        print(f"   ‚ùå ML –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∞: {e}")
    
    print("\n3. –ò—Ç–æ–≥–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞...")
    print("   üéØ ML —Å–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
    print("   üìù –ü—Ä–æ–±–ª–µ–º–∞ –±—ã–ª–∞ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è backend")

if __name__ == "__main__":
    test_ml_only() 